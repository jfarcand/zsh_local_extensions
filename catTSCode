#!/usr/bin/env bash

# Check if any arguments were provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 dir1 [dir2 ...] [--excludes dir1,dir2,...]"
    echo "Please provide at least one directory path"
    exit 1
fi

# Initialize an array for excluded directories
EXCLUDE_DIRS=()

# Process arguments
DIRS=()
while [[ $# -gt 0 ]]; do
    case "$1" in
        --excludes)
            IFS=',' read -ra EXCLUDE_DIRS <<< "$2"
            shift 2
            ;;
        *)
            DIRS+=("$1")
            shift
            ;;
    esac
done

# Function to check if a directory should be excluded
is_excluded() {
    local file="$1"
    for exclude in "${EXCLUDE_DIRS[@]}"; do
        if [[ "$file" == "$exclude"* ]]; then
            return 0
        fi
    done
    return 1
}

# Process each directory provided as an argument
for dir in "${DIRS[@]}"; do
    if [ ! -d "$dir" ]; then
        echo "Warning: $dir is not a directory, skipping..." >&2
        continue
    fi

    # Use find to get all .ts files recursively
    while IFS= read -r -d '' file; do
        # Check if the file is in an excluded directory
        if is_excluded "$file"; then
            continue
        fi

        echo "// $file"
        cat "$file"
        echo ""  # Ensure a newline between files
    done < <(find "$dir" -type f -name "*.ts" -print0)
done

