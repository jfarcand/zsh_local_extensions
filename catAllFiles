#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# catAllFiles: Calls catFiles on all base names found in directories.
# -----------------------------------------------------------------------------
# Usage:
#   catAllFiles [--withSchema schema.prisma] [--scanDir <dir>] <dir1> <dir2> <dir3> ...
#
# Options:
#   --withSchema schema.prisma    Schema file to use for model lookups
#   --scanDir <dir>               Directory to scan for base names (defaults to first directory)
#   --outDir <dir>                Where to save output files (defaults to ~/Downloads)
#
# Example:
#   catAllFiles --withSchema prisma/schema.prisma prisma/seeds prisma/mutations src/resolvers/
# -----------------------------------------------------------------------------

# Process arguments
SCHEMA_FILE=""
SCAN_DIR=""
OUTPUT_DIR=~/Downloads
DIRECTORIES=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --withSchema)
            SCHEMA_FILE="$2"
            if [ ! -f "$SCHEMA_FILE" ]; then
                echo "Error: Schema file '$SCHEMA_FILE' not found"
                exit 1
            fi
            shift 2
            ;;
        --scanDir)
            SCAN_DIR="$2"
            if [ ! -d "$SCAN_DIR" ]; then
                echo "Error: Scan directory '$SCAN_DIR' not found"
                exit 1
            fi
            shift 2
            ;;
        --outDir)
            OUTPUT_DIR="$2"
            shift 2
            ;;
        *)
            DIRECTORIES+=("$1")
            shift
            ;;
    esac
done

# Validate arguments
if [ ${#DIRECTORIES[@]} -eq 0 ]; then
    echo "Error: No directories specified"
    echo "Usage: $0 [--withSchema schema.prisma] [--scanDir <dir>] [--outDir <dir>] <dir1> <dir2> ..."
    exit 1
fi

# If no scan directory specified, use the first directory
if [ -z "$SCAN_DIR" ]; then
    SCAN_DIR="${DIRECTORIES[0]}"
fi

# Create output directory
mkdir -p "$OUTPUT_DIR"
echo "Output files will be saved to: $OUTPUT_DIR"

# Count and track files for summary
SUCCESSFUL=0
FAILED=0
PROCESSED=0

# Get list of files to process
BASENAMES=()
for file in "$SCAN_DIR"/*; do
    if [[ -f "$file" ]]; then
        baseName=$(basename "$file" | cut -d '.' -f1)
        BASENAMES+=("$baseName")
    fi
done

echo "Found ${#BASENAMES[@]} base names to process in $SCAN_DIR"

# Process each base name
for baseName in "${BASENAMES[@]}"; do
    ((PROCESSED++))
    outputFile="$OUTPUT_DIR/${baseName}-code.ts"
    
    echo "[$PROCESSED/${#BASENAMES[@]}] Processing: $baseName"
    
    # Add header with metadata
    {
        echo "// Generated by catAllFiles on $(date)"
        echo "// Base name: $baseName"
        echo "// Directories scanned: ${DIRECTORIES[*]}"
        echo "// Schema file: ${SCHEMA_FILE:-None}"
        echo ""
        
        # Run catFiles and capture output
        if [[ -n "$SCHEMA_FILE" ]]; then
            catFiles --grep "$baseName" --withSchema "$SCHEMA_FILE" "${DIRECTORIES[@]}"
        else
            catFiles --grep "$baseName" "${DIRECTORIES[@]}"
        fi
    } > "$outputFile"
    
    # Check if file contains actual content beyond the header (5 lines)
    if [[ $(wc -l < "$outputFile") -gt 5 ]]; then
        echo "✅ Processed $baseName -> $outputFile"
        ((SUCCESSFUL++))
    else
        echo "❌ No matching content found for $baseName"
        rm "$outputFile"  # Remove empty files
        ((FAILED++))
    fi
done

echo ""
echo "Processing complete:"
echo "- Total processed: $PROCESSED"
echo "- Successful: $SUCCESSFUL"
echo "- No content found: $FAILED"
echo "- Output location: $OUTPUT_DIR"